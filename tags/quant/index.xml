<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Quant on Chase the Devil</title>
    <link>http://chasethedevil.github.io/tags/quant/</link>
    <description>Recent content in Quant on Chase the Devil</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright 2006-2016 Fabien Le Floc&#39;h. This work is licensed under a Creative Commons Attribution 4.0 International License.</copyright>
    <lastBuildDate>Sat, 22 Aug 2015 16:13:00 +0000</lastBuildDate>
    <atom:link href="/tags/quant/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Go for Monte-Carlo</title>
      <link>http://chasethedevil.github.io/post/go-for-monte-carlo/</link>
      <pubDate>Sat, 22 Aug 2015 16:13:00 +0000</pubDate>
      
      <guid>http://chasethedevil.github.io/post/go-for-monte-carlo/</guid>
      <description>I have looked a few months ago already at Julia, Dart, Rust and Scala programming languages to see how practical they could be for a simple Monte-Carlo option pricing.
I forgot the Go language. I had tried it 1 or 2 years ago, and at that time, did not enjoy it too much. Looking at Go 1.5 benchmarks on thecomputer language shootout, I was surprised that it seemed so close to Java performance now, while having a GC that guarantees pauses of less 10ms and consuming much less memory. <a href="/post/go-for-monte-carlo/">Read More…</a> <p>Copyright 2006-2016 Fabien Le Floc&#39;h. This work is licensed under a Creative Commons Attribution 4.0 International License.</p></description>
    </item>
    
    <item>
      <title>Bumping Correlations</title>
      <link>http://chasethedevil.github.io/post/bumping-correlations/</link>
      <pubDate>Sat, 25 Jul 2015 18:36:00 +0000</pubDate>
      
      <guid>http://chasethedevil.github.io/post/bumping-correlations/</guid>
      <description>In his book &amp;ldquo;Monte Carlo Methods in Finance&amp;rdquo;, P. Jäckel explains a simple way to clean up a correlation matrix. When a given correlation matrix is not positive semi-definite, the idea is to do a singular value decomposition (SVD), replace the negative eigenvalues by 0, and renormalize the corresponding eigenvector accordingly.
One of the cited applications is &amp;ldquo;stress testing and scenario analysis for market risk&amp;rdquo; or &amp;ldquo;comparative pricing in order to ascertain the extent of correlation exposure for multi-asset derivatives&amp;rdquo;, saying that &amp;ldquo;In many of these cases we end up with a matrix that is no longer positive semi-definite&amp;rdquo;. <a href="/post/bumping-correlations/">Read More…</a> <p>Copyright 2006-2016 Fabien Le Floc&#39;h. This work is licensed under a Creative Commons Attribution 4.0 International License.</p></description>
    </item>
    
    <item>
      <title>Andreasen Huge extrapolation</title>
      <link>http://chasethedevil.github.io/post/andreasen-huge-extrapolation/</link>
      <pubDate>Mon, 13 Jul 2015 17:35:00 +0000</pubDate>
      
      <guid>http://chasethedevil.github.io/post/andreasen-huge-extrapolation/</guid>
      <description>There are not many arbitrage free extrapolation schemes. Benaim et al. extrapolation is one of the few that claims it. However, despite the paper&amp;rsquo;s title, it is not truely arbitrage free. The density might be positive, but the forward is not preserved by the implied density. It can also lead to wings that don&amp;rsquo;t obey Lee&amp;rsquo;s moments condition.
On a Wilmott forum, P. Caspers proposed the following counter-example based on extrapolating SABR: \( \alpha=15\%, \beta=80\%, \nu=50\%, \rho=-48\%, f=3\%, T=20. <a href="/post/andreasen-huge-extrapolation/">Read More…</a> <p>Copyright 2006-2016 Fabien Le Floc&#39;h. This work is licensed under a Creative Commons Attribution 4.0 International License.</p></description>
    </item>
    
    <item>
      <title>Unintuitive behavior of the Black-Scholes formula - negative volatilities in displaced diffusion extrapolation</title>
      <link>http://chasethedevil.github.io/post/unintuitive-behavior-of-the-black-scholes-formula---negative-volatilities-in-displaced-diffusion-extrapolation/</link>
      <pubDate>Tue, 07 Jul 2015 16:43:00 +0000</pubDate>
      
      <guid>http://chasethedevil.github.io/post/unintuitive-behavior-of-the-black-scholes-formula---negative-volatilities-in-displaced-diffusion-extrapolation/</guid>
      <description>I am looking at various extrapolation schemes of the implied volatilities. An interesting one I stumbled upon is due to Kahale. Even if his paper is on interpolation, there is actually a small paragraph on using the same kind of function for extrapolation. His idea is to simply lookup the standard deviation \( \Sigma \) and the forward \(f\) corresponding to a given market volatility and slope: $$ c_{f,\Sigma} = f N(d_1) - k N(d_2)$$ with $$ d_1 = \frac{\log(f/k)+\Sigma^2 /2}{\Sigma} $$ <a href="/post/unintuitive-behavior-of-the-black-scholes-formula---negative-volatilities-in-displaced-diffusion-extrapolation/">Read More…</a> <p>Copyright 2006-2016 Fabien Le Floc&#39;h. This work is licensed under a Creative Commons Attribution 4.0 International License.</p></description>
    </item>
    
    <item>
      <title>Square Root Crank-Nicolson</title>
      <link>http://chasethedevil.github.io/post/square-root-crank-nicolson/</link>
      <pubDate>Fri, 19 Jun 2015 16:41:00 +0000</pubDate>
      
      <guid>http://chasethedevil.github.io/post/square-root-crank-nicolson/</guid>
      <description>C. Reisinger kindly pointed out to me this paper around square root Crank-Nicolson. The idea is to apply a square root of time transformation to the PDE, and discretize the resulting PDE with Crank-Nicolson. Two reasons come to mind to try this: the square root transform will result in small steps initially, where the solution is potentially not so smooth, making Crank-Nicolson behave better.&amp;nbsp;it is the natural time of the Brownian motion. <a href="/post/square-root-crank-nicolson/">Read More…</a> <p>Copyright 2006-2016 Fabien Le Floc&#39;h. This work is licensed under a Creative Commons Attribution 4.0 International License.</p></description>
    </item>
    
    <item>
      <title>Decoding Hagan&#39;s arbitrage free SABR PDE derivation</title>
      <link>http://chasethedevil.github.io/post/decoding-hagans-arbitrage-free-sabr-pde-derivation/</link>
      <pubDate>Fri, 08 May 2015 16:50:00 +0000</pubDate>
      
      <guid>http://chasethedevil.github.io/post/decoding-hagans-arbitrage-free-sabr-pde-derivation/</guid>
      <description>Here are the main steps of Hagan derivation. Let&amp;rsquo;s recall his notation for the SABR model where typically, \(C(F) = F^\beta\)
First, he defines the moments of stochastic volatility: Then he integrates the Fokker-Planck equation over all A, to obtain On the backward Komolgorov equation, he applies a Lamperti transform like change of variable: And then makes another change of variable so that the PDE has the same initial conditions for all moments: &amp;nbsp;This leads to It turns out that there is a magical symmetry for k=0 and k=2. <a href="/post/decoding-hagans-arbitrage-free-sabr-pde-derivation/">Read More…</a> <p>Copyright 2006-2016 Fabien Le Floc&#39;h. This work is licensed under a Creative Commons Attribution 4.0 International License.</p></description>
    </item>
    
    <item>
      <title>Matching Hagan PDE SABR with the one-step Andreasen-Huge SABR</title>
      <link>http://chasethedevil.github.io/post/matching-hagan-pde-sabr-with-the-one-step-andreasen-huge-sabr/</link>
      <pubDate>Thu, 30 Apr 2015 17:16:00 +0000</pubDate>
      
      <guid>http://chasethedevil.github.io/post/matching-hagan-pde-sabr-with-the-one-step-andreasen-huge-sabr/</guid>
      <description>I looked nearly two years ago already at the arbitrage free SABR of Andreasen-Huge in comparison to the arbitrage free PDE of Hagan and showed how close the ideas were: Andreasen-Huge relies on the normal Dupire forward PDE using a slightly simpler local vol (no time dependent exponential term) while Hagan works directly on the Fokker-Planck PDE (you can think of it as the Dupire Forward PDE for the density) and uses an expansion of same order as the original SABR formula (which leads to an additional exponential term in the local volatility). <a href="/post/matching-hagan-pde-sabr-with-the-one-step-andreasen-huge-sabr/">Read More…</a> <p>Copyright 2006-2016 Fabien Le Floc&#39;h. This work is licensed under a Creative Commons Attribution 4.0 International License.</p></description>
    </item>
    
    <item>
      <title>Modern Programming Language for Monte-Carlo</title>
      <link>http://chasethedevil.github.io/post/modern-programming-language-for-monte-carlo/</link>
      <pubDate>Sat, 18 Apr 2015 22:58:00 +0000</pubDate>
      
      <guid>http://chasethedevil.github.io/post/modern-programming-language-for-monte-carlo/</guid>
      <description>A few recent programming languages sparked my interest:
Julia: because of the wide coverage of mathematical functions, and great attention to quality of the implementations. It has also some interesting web interface.Dart: because it&amp;rsquo;s a language focused purely on building apps for the web, and has a supposedly good VM.Rust: it&amp;rsquo;s the latest fad. It has interesting concepts around concurrency and a focus on being low level all the while being simpler than C. <a href="/post/modern-programming-language-for-monte-carlo/">Read More…</a> <p>Copyright 2006-2016 Fabien Le Floc&#39;h. This work is licensed under a Creative Commons Attribution 4.0 International License.</p></description>
    </item>
    
    <item>
      <title>Volatility Swap vs Variance Swap Replication - Truncation</title>
      <link>http://chasethedevil.github.io/post/volatility-swap-vs-variance-swap-replication---truncation/</link>
      <pubDate>Mon, 16 Mar 2015 14:39:00 +0000</pubDate>
      
      <guid>http://chasethedevil.github.io/post/volatility-swap-vs-variance-swap-replication---truncation/</guid>
      <description>I have looked at jump effects on volatility vs. variance swaps. There is a similar behavior on tail events, that is, on truncating the replication.
One main problem with discrete replication of variance swaps is the implicit domain truncation, mainly because the variance swap equivalent log payoff is far from being linear in the wings.
The equivalent payoff with Carr-Lee for a volatility swap is much more linear in the wings (not so far of a straddle). <a href="/post/volatility-swap-vs-variance-swap-replication---truncation/">Read More…</a> <p>Copyright 2006-2016 Fabien Le Floc&#39;h. This work is licensed under a Creative Commons Attribution 4.0 International License.</p></description>
    </item>
    
    <item>
      <title>Arbitrage free SABR with negative rates - alternative to shifted SABR</title>
      <link>http://chasethedevil.github.io/post/arbitrage-free-sabr-with-negative-rates---alternative-to-shifted-sabr/</link>
      <pubDate>Wed, 11 Mar 2015 18:48:00 +0000</pubDate>
      
      <guid>http://chasethedevil.github.io/post/arbitrage-free-sabr-with-negative-rates---alternative-to-shifted-sabr/</guid>
      <description>Antonov et al. present an interesting view on SABR with negative rates: instead of relying on a shifted SABR to allow negative rates up to a somewhat arbitrary shift, they modify slightly the SABR model to allow negative rates directly: $$ dF_t = |F_t|^\beta v_t dW_F $$ with \( v_t \) being the standard lognormal volatility process of SABR.
Furthermore they derive a clever semi-analytical approximation for this model, based on low correlation, quite close to the Monte-Carlo prices in their tests. <a href="/post/arbitrage-free-sabr-with-negative-rates---alternative-to-shifted-sabr/">Read More…</a> <p>Copyright 2006-2016 Fabien Le Floc&#39;h. This work is licensed under a Creative Commons Attribution 4.0 International License.</p></description>
    </item>
    
  </channel>
</rss>
