<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programming on Chase the Devil</title>
    <link>https://chasethedevil.github.io/tags/programming/</link>
    <description>Recent content in programming on Chase the Devil</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright 2006-2018 Fabien Le Floc&#39;h. This work is licensed under a Creative Commons Attribution 4.0 International License.</copyright>
    <lastBuildDate>Thu, 29 Sep 2005 15:20:00 +0000</lastBuildDate><atom:link href="https://chasethedevil.github.io/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Interesting Plug-In Framework - DPML Transit</title>
      <link>https://chasethedevil.github.io/post/interesting-plug-in-framework---dpml-transit/</link>
      <pubDate>Thu, 29 Sep 2005 15:20:00 +0000</pubDate>
      
      <guid>https://chasethedevil.github.io/post/interesting-plug-in-framework---dpml-transit/</guid>
      <description>Today, I just found out about DPML Transit, it is a small framework that helps you build plug-ins based software. It seems to work a bit with DPML Magic, their build system based upon Ant. Both are quite interesting, since in big projects, you often end up with a packaging per component (which DPML Magic seems to make very simple) and a versioning of those components. DPML Transit allows then for an efficient way to look up a particular version of one component.</description>
    </item>
    
    <item>
      <title>Is Prolog Better Suited Than SQL?</title>
      <link>https://chasethedevil.github.io/post/is-prolog-better-suited-than-sql/</link>
      <pubDate>Mon, 26 Sep 2005 15:36:00 +0000</pubDate>
      
      <guid>https://chasethedevil.github.io/post/is-prolog-better-suited-than-sql/</guid>
      <description>I am currently reading a Prolog book Artificial Intelligence Through Prolog, I have been doing a bit of Prolog when I was very young and wanted to refresh my memory a bit. It is a very interesting read, especially when I take the viewpoint of our current application where no ACID compliance is required.
It seems to me that all the logic we coded to parametrize SQL queries and construct them dynamically could have been avoided if we had chosen Prolog as Prolog expressions would have been very natural to use in our project.</description>
    </item>
    
    <item>
      <title>Java is more productive than Ruby/Rails</title>
      <link>https://chasethedevil.github.io/post/java-is-more-productive-than-rubyrails/</link>
      <pubDate>Tue, 26 Jul 2005 13:26:00 +0000</pubDate>
      
      <guid>https://chasethedevil.github.io/post/java-is-more-productive-than-rubyrails/</guid>
      <description>I have been doing some Ruby On Rails, for 2 small projects. While I think it is good, I think it is overhyped as well. It is well designed, has good ideas (easy configuration), and focus on the right problem, architecture. But my conclusion is that I am not more productive with it than with Java.
I think most of the development time is not spent coding, but thinking. It is a very obvious statement, and yet too often ignored.</description>
    </item>
    
  </channel>
</rss>
